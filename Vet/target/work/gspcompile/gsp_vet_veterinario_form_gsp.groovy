import vet.Veterinario
import org.codehaus.groovy.grails.plugins.metadata.GrailsPlugin
import org.codehaus.groovy.grails.web.pages.GroovyPage
import org.codehaus.groovy.grails.web.taglib.*
import org.codehaus.groovy.grails.web.taglib.exceptions.GrailsTagException
import org.springframework.web.util.*
import grails.util.GrailsUtil

class gsp_vet_veterinario_form_gsp extends GroovyPage {
public String getGroovyPageFileName() { "/WEB-INF/grails-app/views/veterinario/_form.gsp" }
public Object run() {
Writer out = getOut()
Writer expressionOut = getExpressionOut()
registerSitemeshPreprocessMode()
printHtmlPart(0)
expressionOut.print(hasErrors(bean: veterinarioInstance, field: 'userEmail', 'error'))
printHtmlPart(1)
invokeTag('message','g',6,['code':("veterinario.userEmail.label"),'default':("User Email")],-1)
printHtmlPart(2)
invokeTag('field','g',10,['class':("form-control"),'type':("email"),'name':("userEmail"),'required':(""),'value':(veterinarioInstance?.userEmail)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: veterinarioInstance, field: 'telefone1', 'error'))
printHtmlPart(4)
invokeTag('message','g',18,['code':("veterinario.telefone1.label"),'default':("Telefone1")],-1)
printHtmlPart(2)
invokeTag('textField','g',22,['class':("form-control"),'name':("telefone1"),'maxlength':("13"),'required':(""),'value':(veterinarioInstance?.telefone1)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: veterinarioInstance, field: 'telefone2', 'error'))
printHtmlPart(5)
invokeTag('message','g',30,['code':("veterinario.telefone2.label"),'default':("Telefone2")],-1)
printHtmlPart(2)
invokeTag('textField','g',34,['class':("form-control"),'name':("telefone2"),'maxlength':("13"),'required':(""),'value':(veterinarioInstance?.telefone2)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: veterinarioInstance, field: 'complemento', 'error'))
printHtmlPart(6)
invokeTag('message','g',42,['code':("veterinario.complemento.label"),'default':("Complemento")],-1)
printHtmlPart(7)
invokeTag('textField','g',46,['class':("form-control"),'name':("complemento"),'value':(veterinarioInstance?.complemento)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: veterinarioInstance, field: 'bairro', 'error'))
printHtmlPart(8)
invokeTag('message','g',54,['code':("veterinario.bairro.label"),'default':("Bairro")],-1)
printHtmlPart(2)
invokeTag('textField','g',58,['class':("form-control"),'name':("bairro"),'required':(""),'value':(veterinarioInstance?.bairro)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: veterinarioInstance, field: 'cep', 'error'))
printHtmlPart(9)
invokeTag('message','g',66,['code':("veterinario.cep.label"),'default':("Cep")],-1)
printHtmlPart(2)
invokeTag('textField','g',70,['class':("form-control"),'name':("cep"),'required':(""),'value':(veterinarioInstance?.cep)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: veterinarioInstance, field: 'cidade', 'error'))
printHtmlPart(10)
invokeTag('message','g',78,['code':("veterinario.cidade.label"),'default':("Cidade")],-1)
printHtmlPart(2)
invokeTag('textField','g',82,['class':("form-control"),'name':("cidade"),'required':(""),'value':(veterinarioInstance?.cidade)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: veterinarioInstance, field: 'cpf', 'error'))
printHtmlPart(11)
invokeTag('message','g',90,['code':("veterinario.cpf.label"),'default':("Cpf")],-1)
printHtmlPart(2)
invokeTag('textField','g',94,['class':("form-control"),'name':("cpf"),'required':(""),'value':(veterinarioInstance?.cpf)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: veterinarioInstance, field: 'crmv', 'error'))
printHtmlPart(12)
invokeTag('message','g',102,['code':("veterinario.crmv.label"),'default':("Crmv")],-1)
printHtmlPart(2)
invokeTag('textField','g',106,['class':("form-control"),'name':("crmv"),'required':(""),'value':(veterinarioInstance?.crmv)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: veterinarioInstance, field: 'dataNascimento', 'error'))
printHtmlPart(13)
invokeTag('message','g',114,['code':("veterinario.dataNascimento.label"),'default':("Data Nascimento")],-1)
printHtmlPart(2)
invokeTag('datePicker','g',118,['name':("dataNascimento"),'precision':("day"),'value':(veterinarioInstance?.dataNascimento)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: veterinarioInstance, field: 'logradouro', 'error'))
printHtmlPart(14)
invokeTag('message','g',126,['code':("veterinario.logradouro.label"),'default':("Logradouro")],-1)
printHtmlPart(2)
invokeTag('textField','g',130,['class':("form-control"),'name':("logradouro"),'required':(""),'value':(veterinarioInstance?.logradouro)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: veterinarioInstance, field: 'nome', 'error'))
printHtmlPart(15)
invokeTag('message','g',138,['code':("veterinario.nome.label"),'default':("Nome")],-1)
printHtmlPart(2)
invokeTag('textField','g',142,['class':("form-control"),'name':("nome"),'required':(""),'value':(veterinarioInstance?.nome)],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: veterinarioInstance, field: 'numero', 'error'))
printHtmlPart(16)
invokeTag('message','g',150,['code':("veterinario.numero.label"),'default':("Numero")],-1)
printHtmlPart(2)
invokeTag('field','g',154,['class':("form-control"),'name':("numero"),'type':("number"),'value':(veterinarioInstance.numero),'required':("")],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: veterinarioInstance, field: 'rg', 'error'))
printHtmlPart(17)
invokeTag('message','g',162,['code':("veterinario.rg.label"),'default':("Rg")],-1)
printHtmlPart(2)
invokeTag('field','g',166,['class':("form-control"),'name':("rg"),'type':("number"),'value':(veterinarioInstance.rg),'required':("")],-1)
printHtmlPart(3)
expressionOut.print(hasErrors(bean: veterinarioInstance, field: 'uf', 'error'))
printHtmlPart(18)
invokeTag('message','g',174,['code':("veterinario.uf.label"),'default':("Uf")],-1)
printHtmlPart(2)
invokeTag('textField','g',178,['class':("form-control"),'name':("uf"),'required':(""),'value':(veterinarioInstance?.uf)],-1)
printHtmlPart(19)
}
public static final Map JSP_TAGS = new HashMap()
protected void init() {
	this.jspTags = JSP_TAGS
}
public static final String CONTENT_TYPE = 'text/html;charset=UTF-8'
public static final long LAST_MODIFIED = 1479510271064L
public static final String EXPRESSION_CODEC = 'html'
public static final String STATIC_CODEC = 'none'
public static final String OUT_CODEC = 'html'
public static final String TAGLIB_CODEC = 'none'
}
